I"8<h1 id="functional-programming">Functional Programming</h1>
<p>Functional Programming is a paradigm for software design. It favors implementing functionality by composition of pure function and demands that side effects be strictly separated from <a href="pure function.md">pure</a> functional code.</p>

<p>This pure code has <a class="internal-link" href="/referential-transparency">Referential Transparency</a> and it is possible to reason about its behavior mathematically.</p>

<h2 id="common-features">common features</h2>
<p>The following are generally common to functional design. However, not all languages have built in support for these concepts. Trying to keep code pure can be puzzling as a computer program is inherently useless until it produces some tangible side effect. The following language features generally make this puzzle easier to solve.</p>

<p>-<a class="internal-link" href="/closures">Closures</a>
-<a class="internal-link" href="/partial-application">Partial Application</a>
-<a class="internal-link" href="/lazy-evaluation">Lazy Evaluation</a></p>
:ET